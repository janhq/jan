{
  "name": "jan",
  "version": "0.1.1740752217",
  "main": "./build/main.js",
  "author": "Jan <service@jan.ai>",
  "license": "MIT",
  "productName": "Jan",
  "homepage": "https://github.com/janhq/jan/tree/main/electron",
  "description": "Use offline LLMs with your own data. Run open source models like Llama2 or Falcon on your internal computers/servers.",
  "build": {
    "appId": "jan.ai.app",
    "productName": "Jan",
    "files": [
      "renderer/**/*",
      "build/**/*.{js,map}",
      "pre-install",
      "themes",
      "scripts/**/*",
      "icons/**/*",
      "themes",
      "shared"
    ],
    "asarUnpack": [
      "pre-install",
      "themes",
      "docs",
      "scripts",
      "icons",
      "themes",
      "shared"
    ],
    "publish": [
      {
        "provider": "github",
        "owner": "janhq",
        "repo": "jan"
      }
    ],
    "extends": null,
    "mac": {
      "type": "distribution",
      "entitlements": "./entitlements.mac.plist",
      "entitlementsInherit": "./entitlements.mac.plist",
      "notarize": {
        "teamId": "F8AH6NHVY5"
      },
      "icon": "icons/icon.png"
    },
    "linux": {
      "target": [
        "deb"
      ],
      "category": "Utility",
      "icon": "icons/"
    },
    "win": {
      "icon": "icons/icon.png",
      "target": [
        "nsis"
      ]
    },
    "nsis": {
      "oneClick": true,
      "installerIcon": "icons/icon.ico",
      "uninstallerIcon": "icons/icon.ico",
      "include": "scripts/uninstaller.nsh",
      "deleteAppDataOnUninstall": true
    },
    "protocols": [
      {
        "name": "Jan",
        "schemes": [
          "jan"
        ]
      }
    ],
    "artifactName": "jan-${os}-${arch}-${version}.${ext}"
  },
  "scripts": {
    "lint": "eslint . --ext \".js,.jsx,.ts,.tsx\"",
    "test:e2e": "DEBUG=pw:browser xvfb-maybe -- playwright test --workers=1",
    "copy:assets": "rimraf --glob \"./pre-install/*.tgz\" && cpx \"../pre-install/*.tgz\" \"./pre-install\"",
    "version-patch": "run-script-os",
    "version-patch:darwin:linux": "jq '.version' package.json | tr -d '\"' > .version.bak && jq --arg ver \"0.1.$(date +%s)\" '.version = $ver' package.json > package.tmp && mv package.tmp package.json",
    "version-patch:win32": "node -e \"const fs=require('fs');const pkg=require('./package.json');const bak=pkg.version;fs.writeFileSync('.version.bak',bak);pkg.version='0.1.'+Math.floor(Date.now()/1000);fs.writeFileSync('package.json',JSON.stringify(pkg,null,2));\"",
    "version-restore": "run-script-os",
    "version-restore:darwin:linux": "jq --arg ver $(cat .version.bak) '.version = $ver' package.json > package.tmp && mv package.tmp package.json && rm .version.bak",
    "version-restore:win32": "node -e \"const fs=require('fs');const pkg=require('./package.json');const bak=fs.readFileSync('.version.bak','utf8');pkg.version=bak;fs.writeFileSync('package.json',JSON.stringify(pkg,null,2));\"",
    "dev:darwin:linux": "yarn copy:assets && tsc -p . && yarn version-patch && electron . && yarn version-restore",
    "dev:windows": "yarn copy:assets && tsc -p . && electron .",
    "dev": "run-script-os",
    "compile": "tsc -p .",
    "start": "electron .",
    "build": "yarn copy:assets && run-script-os",
    "build:test": "yarn copy:assets && run-script-os",
    "build:test:darwin": "tsc -p . && electron-builder -p never -m --dir",
    "build:test:win32": "tsc -p . && electron-builder -p never -w --dir",
    "build:test:linux": "tsc -p . && electron-builder -p never -l --dir",
    "build:darwin": "tsc -p . && electron-builder -p never -m --universal",
    "build:win32": "tsc -p . && electron-builder -p never -w",
    "build:linux": "tsc -p . && electron-builder -p never -l deb -l AppImage",
    "build:publish": "yarn copy:assets && run-script-os",
    "build:publish:darwin": "tsc -p . && electron-builder -p always -m --universal",
    "build:publish:win32": "tsc -p . && electron-builder -p always -w",
    "build:publish:linux": "tsc -p . && electron-builder -p always -l deb -l AppImage"
  },
  "dependencies": {
    "@alumna/reflect": "^1.1.3",
    "@janhq/core": "link:../core",
    "@janhq/server": "link:../server",
    "@kirillvakalov/nut-tree__nut-js": "4.2.1-2",
    "@npmcli/arborist": "^7.1.0",
    "electron-store": "^8.1.0",
    "electron-updater": "^6.1.7",
    "fs-extra": "^11.2.0",
    "pacote": "^21.0.0",
    "request": "^2.88.2",
    "request-progress": "^3.0.0",
    "ulidx": "^2.3.0"
  },
  "devDependencies": {
    "@electron/notarize": "^2.5.0",
    "@playwright/test": "^1.38.1",
    "@reportportal/agent-js-playwright": "^5.1.7",
    "@types/npmcli__arborist": "^5.6.4",
    "@types/pacote": "^11.1.7",
    "@types/request": "^2.48.12",
    "@typescript-eslint/eslint-plugin": "^6.7.3",
    "@typescript-eslint/parser": "^6.7.3",
    "electron": "30.0.6",
    "electron-builder": "^24.13.3",
    "electron-builder-squirrel-windows": "^24.13.3",
    "electron-devtools-installer": "^3.2.0",
    "electron-playwright-helpers": "^1.6.0",
    "eslint": "8.57.0",
    "eslint-plugin-react": "^7.34.0",
    "rimraf": "^5.0.5",
    "run-script-os": "^1.1.6",
    "typescript": "^5.3.3",
    "xvfb-maybe": "^0.2.1"
  },
  "installConfig": {
    "hoistingLimits": "workspaces"
  },
  "packageManager": "yarn@4.5.3"
}
